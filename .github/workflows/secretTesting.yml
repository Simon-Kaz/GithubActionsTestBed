on:
  push: {}
  
jobs:
  verifyConditionalEnvVar:
    name: Set env var based on matrix value - ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [iOS, Android]
          
    env:
      SECRET_KEY_ANDROID: ${{ secrets.SECRET_KEY_Android }}  
    steps:
      - uses: actions/checkout@v2
      - run: | 
          echo "iOS secret exists: ${{ secrets.SECRET_KEY_IOS != 0 }}"
          echo "Android secret exists: ${{ secrets.SECRET_KEY_Android != 0 }}"
          echo "iOS env var exists: ${{ env.SECRET_KEY_IOS != 0 }}"
          echo "Android env var exists: ${{ env.SECRET_KEY_ANDROID != 0 }}"
          KEY=${{format('SECRET_KEY_{0}', matrix.platform) }}
          echo "dollar: $KEY"
          echo "env key: ${{ env.KEY}}"
          echo "key for ${{ matrix.platform }}: ${{ secrets[env.KEY] != 0 }}"
          
#   suggestedSolution:
#     name: Set env var based on matrix value - ${{ matrix.platform }}
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         platform: [iOS_2018, Android_2018, iOS_2019, Android_2019]
#         secret: [UNITY_LICENSE_iOS_2018, UNITY_LICENSE_Android_2018, UNITY_LICENSE_iOS_2019, UNITY_LICENSE_Android_2019]
#     steps:
#       - uses: actions/checkout@v2
#       - run: | 
#           echo" Running for ${{ matrix.secret }}"
#           echo "key for matrix.platform and matrix.secret ${{ secrets[matrix.secret] != 0 }}"
          
  verifyCaseInsensitiveSecretLookup:
    name: Read secrets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check if secret exists, and make sure its case insensitive. Should return true for all cases
        run: |
          echo "${{ secrets.SECRET_KEY != 0 }}"
          echo "${{ secrets.SECRET_key != 0 }}"
          echo "${{ secrets.secret_key != 0 }}"
      - name: print secret mixed keys
        run: echo "${{ secrets.SECRET_key != 0 }}"
